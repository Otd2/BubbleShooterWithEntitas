//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity pieceColorsConfigEntity { get { return GetGroup(ConfigMatcher.PieceColorsConfig).GetSingleEntity(); } }
    public PieceColorsConfigComponent pieceColorsConfig { get { return pieceColorsConfigEntity.pieceColorsConfig; } }
    public bool hasPieceColorsConfig { get { return pieceColorsConfigEntity != null; } }

    public ConfigEntity SetPieceColorsConfig(IPieceColorsConfig newValue) {
        if (hasPieceColorsConfig) {
            throw new Entitas.EntitasException("Could not set PieceColorsConfig!\n" + this + " already has an entity with PieceColorsConfigComponent!",
                "You should check if the context already has a pieceColorsConfigEntity before setting it or use context.ReplacePieceColorsConfig().");
        }
        var entity = CreateEntity();
        entity.AddPieceColorsConfig(newValue);
        return entity;
    }

    public void ReplacePieceColorsConfig(IPieceColorsConfig newValue) {
        var entity = pieceColorsConfigEntity;
        if (entity == null) {
            entity = SetPieceColorsConfig(newValue);
        } else {
            entity.ReplacePieceColorsConfig(newValue);
        }
    }

    public void RemovePieceColorsConfig() {
        pieceColorsConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public PieceColorsConfigComponent pieceColorsConfig { get { return (PieceColorsConfigComponent)GetComponent(ConfigComponentsLookup.PieceColorsConfig); } }
    public bool hasPieceColorsConfig { get { return HasComponent(ConfigComponentsLookup.PieceColorsConfig); } }

    public void AddPieceColorsConfig(IPieceColorsConfig newValue) {
        var index = ConfigComponentsLookup.PieceColorsConfig;
        var component = (PieceColorsConfigComponent)CreateComponent(index, typeof(PieceColorsConfigComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePieceColorsConfig(IPieceColorsConfig newValue) {
        var index = ConfigComponentsLookup.PieceColorsConfig;
        var component = (PieceColorsConfigComponent)CreateComponent(index, typeof(PieceColorsConfigComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePieceColorsConfig() {
        RemoveComponent(ConfigComponentsLookup.PieceColorsConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherPieceColorsConfig;

    public static Entitas.IMatcher<ConfigEntity> PieceColorsConfig {
        get {
            if (_matcherPieceColorsConfig == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.PieceColorsConfig);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherPieceColorsConfig = matcher;
            }

            return _matcherPieceColorsConfig;
        }
    }
}
