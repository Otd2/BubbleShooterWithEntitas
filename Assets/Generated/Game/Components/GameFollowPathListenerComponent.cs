//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FollowPathListenerComponent followPathListener { get { return (FollowPathListenerComponent)GetComponent(GameComponentsLookup.FollowPathListener); } }
    public bool hasFollowPathListener { get { return HasComponent(GameComponentsLookup.FollowPathListener); } }

    public void AddFollowPathListener(System.Collections.Generic.List<IFollowPathListener> newValue) {
        var index = GameComponentsLookup.FollowPathListener;
        var component = (FollowPathListenerComponent)CreateComponent(index, typeof(FollowPathListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFollowPathListener(System.Collections.Generic.List<IFollowPathListener> newValue) {
        var index = GameComponentsLookup.FollowPathListener;
        var component = (FollowPathListenerComponent)CreateComponent(index, typeof(FollowPathListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFollowPathListener() {
        RemoveComponent(GameComponentsLookup.FollowPathListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFollowPathListener;

    public static Entitas.IMatcher<GameEntity> FollowPathListener {
        get {
            if (_matcherFollowPathListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FollowPathListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFollowPathListener = matcher;
            }

            return _matcherFollowPathListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFollowPathListener(IFollowPathListener value) {
        var listeners = hasFollowPathListener
            ? followPathListener.value
            : new System.Collections.Generic.List<IFollowPathListener>();
        listeners.Add(value);
        ReplaceFollowPathListener(listeners);
    }

    public void RemoveFollowPathListener(IFollowPathListener value, bool removeComponentWhenEmpty = true) {
        var listeners = followPathListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFollowPathListener();
        } else {
            ReplaceFollowPathListener(listeners);
        }
    }
}
