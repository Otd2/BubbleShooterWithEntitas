//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TrajectoryListenerComponent trajectoryListener { get { return (TrajectoryListenerComponent)GetComponent(GameComponentsLookup.TrajectoryListener); } }
    public bool hasTrajectoryListener { get { return HasComponent(GameComponentsLookup.TrajectoryListener); } }

    public void AddTrajectoryListener(System.Collections.Generic.List<ITrajectoryListener> newValue) {
        var index = GameComponentsLookup.TrajectoryListener;
        var component = (TrajectoryListenerComponent)CreateComponent(index, typeof(TrajectoryListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTrajectoryListener(System.Collections.Generic.List<ITrajectoryListener> newValue) {
        var index = GameComponentsLookup.TrajectoryListener;
        var component = (TrajectoryListenerComponent)CreateComponent(index, typeof(TrajectoryListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTrajectoryListener() {
        RemoveComponent(GameComponentsLookup.TrajectoryListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTrajectoryListener;

    public static Entitas.IMatcher<GameEntity> TrajectoryListener {
        get {
            if (_matcherTrajectoryListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TrajectoryListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTrajectoryListener = matcher;
            }

            return _matcherTrajectoryListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTrajectoryListener(ITrajectoryListener value) {
        var listeners = hasTrajectoryListener
            ? trajectoryListener.value
            : new System.Collections.Generic.List<ITrajectoryListener>();
        listeners.Add(value);
        ReplaceTrajectoryListener(listeners);
    }

    public void RemoveTrajectoryListener(ITrajectoryListener value, bool removeComponentWhenEmpty = true) {
        var listeners = trajectoryListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTrajectoryListener();
        } else {
            ReplaceTrajectoryListener(listeners);
        }
    }
}
