//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScoreGainedComponent scoreGained { get { return (ScoreGainedComponent)GetComponent(GameComponentsLookup.ScoreGained); } }
    public bool hasScoreGained { get { return HasComponent(GameComponentsLookup.ScoreGained); } }

    public void AddScoreGained(int newScore) {
        var index = GameComponentsLookup.ScoreGained;
        var component = (ScoreGainedComponent)CreateComponent(index, typeof(ScoreGainedComponent));
        component.Score = newScore;
        AddComponent(index, component);
    }

    public void ReplaceScoreGained(int newScore) {
        var index = GameComponentsLookup.ScoreGained;
        var component = (ScoreGainedComponent)CreateComponent(index, typeof(ScoreGainedComponent));
        component.Score = newScore;
        ReplaceComponent(index, component);
    }

    public void RemoveScoreGained() {
        RemoveComponent(GameComponentsLookup.ScoreGained);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScoreGained;

    public static Entitas.IMatcher<GameEntity> ScoreGained {
        get {
            if (_matcherScoreGained == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScoreGained);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScoreGained = matcher;
            }

            return _matcherScoreGained;
        }
    }
}
