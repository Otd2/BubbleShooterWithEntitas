//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity trajectoryEntity { get { return GetGroup(GameMatcher.Trajectory).GetSingleEntity(); } }
    public TrajectoryComponent trajectory { get { return trajectoryEntity.trajectory; } }
    public bool hasTrajectory { get { return trajectoryEntity != null; } }

    public GameEntity SetTrajectory(System.Collections.Generic.List<UnityEngine.Vector3> newHitPoints) {
        if (hasTrajectory) {
            throw new Entitas.EntitasException("Could not set Trajectory!\n" + this + " already has an entity with TrajectoryComponent!",
                "You should check if the context already has a trajectoryEntity before setting it or use context.ReplaceTrajectory().");
        }
        var entity = CreateEntity();
        entity.AddTrajectory(newHitPoints);
        return entity;
    }

    public void ReplaceTrajectory(System.Collections.Generic.List<UnityEngine.Vector3> newHitPoints) {
        var entity = trajectoryEntity;
        if (entity == null) {
            entity = SetTrajectory(newHitPoints);
        } else {
            entity.ReplaceTrajectory(newHitPoints);
        }
    }

    public void RemoveTrajectory() {
        trajectoryEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TrajectoryComponent trajectory { get { return (TrajectoryComponent)GetComponent(GameComponentsLookup.Trajectory); } }
    public bool hasTrajectory { get { return HasComponent(GameComponentsLookup.Trajectory); } }

    public void AddTrajectory(System.Collections.Generic.List<UnityEngine.Vector3> newHitPoints) {
        var index = GameComponentsLookup.Trajectory;
        var component = (TrajectoryComponent)CreateComponent(index, typeof(TrajectoryComponent));
        component.hitPoints = newHitPoints;
        AddComponent(index, component);
    }

    public void ReplaceTrajectory(System.Collections.Generic.List<UnityEngine.Vector3> newHitPoints) {
        var index = GameComponentsLookup.Trajectory;
        var component = (TrajectoryComponent)CreateComponent(index, typeof(TrajectoryComponent));
        component.hitPoints = newHitPoints;
        ReplaceComponent(index, component);
    }

    public void RemoveTrajectory() {
        RemoveComponent(GameComponentsLookup.Trajectory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTrajectory;

    public static Entitas.IMatcher<GameEntity> Trajectory {
        get {
            if (_matcherTrajectory == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Trajectory);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTrajectory = matcher;
            }

            return _matcherTrajectory;
        }
    }
}
